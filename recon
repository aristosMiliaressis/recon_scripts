#!/bin/bash

sort_and_uniq() {
	cat $1 | sort | uniq > temp.txt
	cat temp.txt > $1
	rm temp.txt
}

DNS_RESOLVERS_FILE=/opt/dnsvalidator/resolvers_top25.txt
domain=$1

domainsfile=$(echo $domain)_domains.txt
httpfile=$(echo $domain)_http.txt
bucketsfile=$(echo $domain)_buckets.txt
screenshotdir=$(echo $domain)_screenshots

mkdir $domain
cd $domain

datestamp=$(date +%Y%m%d)
mkdir $datestamp
cd $datestamp

echo "Scanning $domain"

subfinder -silent -nC -o $domainsfile -rL $DNS_RESOLVERS_FILE -d $domain
subfinder_count=$(wc -l $domainsfile | awk '{print  $1}')

echo "subfinder found $subfinder_count subdomain(s)"

/opt/massdns/scripts/subbrute.py -s 4000 /opt/massdns/lists/top200000.txt $domain | massdns --flush -r $DNS_RESOLVERS_FILE -t A -o J -w massdns.json
echo "massdns found $(wc -l massdns.json | awk '{print  $1}') subdomains"
#TODO: append massdns findings to domains file & uniq

amass enum -rf $DNS_RESOLVERS_FILE -max-dns-queries 20000 -d $domain -dir . -noalts -active  >> $domainsfile
cat $domainsfile | unfurl --unique domains | grep $domain > tmpfile
cat tmpfile > $domainsfile
rm tmpfile

amass_count=$(wc -l $domainsfile | awk '{print  $1}')
amass_count=$(($amass_count-$subfinder_count))

echo "amass found $amass_count new subdomains"

dig_deep $domainsfile
if ! [ -s dns_records/CNAME_records.txt ]
then
	cat dns_records/CNAME_records.txt | awk '{print $4}' >> $domainsfile
	sort_and_uniq $domainsfile
fi

cat $domainsfile | httprobe -prefer-https > $httpfile
echo "$(wc -l $httpfile | awk '{print  $1}') web servers found."

echo "Taking screenshots.."

cat $httpfile | aquatone -chrome-path /usr/bin/chromium -http-timeout 30000 -scan-timeout 1000 -screenshot-timeout 2000000 -out $screenshotdir

keyword=$(echo $domain | tr '.' ' ' | awk '{print $1}')
echo "Guessing s3 buckets with keyword $keyword..."
ruby /opt/lazys3/lazys3.rb $keyword > $bucketsfile
#cat $bucketsfile | tail -n +2 | sed 's/\x1b\[[0-9;]*m//g' | awk '{print $3}'> temp.txt
#cat temp.txt > $bucketsfile
#rm temp.txt
#echo "$(wc -l $bucketsfile | awk '{print  $1}') S3 buckets found."

#echo "Testing S3 buckets for insecure permitions"
#python3 /opt/s3scanner/s3scanner.py --out-file s3scan.txt $bucketsfile