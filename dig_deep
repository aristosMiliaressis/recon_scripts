#!/bin/bash

# TODO: work recursivly

if [ $# -eq 0 ];
then
    echo "USAGE: dig_deep <hostfile>"
    exit 1
fi

sort_and_uniq() {
    cat $1 | sort | uniq > temp.txt
    cat temp.txt > $1
    rm temp.txt
}

registration_domain=$(pwd | tr '/' '\n' | sort -nr | tail -n 3 | head -n 1)
ns_authority=$(dig +short  SOA $registration_domain | cut -d' ' -f1)

for sub in $(cat $1)
do
    echo "Searching for ANY in $sub"

    dig +noquestion +nottlid $sub ANY @$ns_authority | tr '\t' ' ' | grep " IN " >> all_records.txt

    # extracting ips from SPF records
    dig +short TXT mellongroup.com | grep spf | tr ' ' '\n' | grep 'ip4\|ip6' | cut -c  5- >> all_hosts.txt
done

sort_and_uniq all_records.txt

cat all_records.txt | grep " IN A" | awk '{print $4}' >> all_hosts.txt
sort_and_uniq all_hosts.txt

for host in $(cat all_hosts.txt)
do
    echo "Searching for PTR in $host"
    dig +noquestion +nottlid -x $host | tr '\t' ' ' | grep " IN " >> all_records.txt
done

sort_and_uniq all_records.txt

cat all_hosts.txt | aar
#cat all_records.txt | aar

cat all_records.txt | grep CNAME | awk '{print $1}' | while read cname;
do
    echo "Checking $cname for NS takeover"
    if [[ $(host $cname | grep NXDOMAIN) != "" ]]
    then
        echo "Possible CNAME takeover on $cname"
        echo "$cname" >> takeovers.txt
    fi
done

zone_transfer() {
    echo "Zone transfer attempt $1 $2"
    res=$(dig @$1 $2 axfr)
    if ! [[ $res == *"Transfer failed"* ]];
    then
        echo $res >> zone_transfer.txt
    fi
}

grep " IN NS" all_records.txt | while read -r entry ; do
    ns=$(echo $entry | awk '{print $4}') 
    domain=$(echo $entry | awk '{print $1}')

    zone_transfer $ns $domain
    zone_transfer $ns "local"
    zone_transfer $ns internal
    zone_transfer $ns network
    zone_transfer $ns lan
    zone_transfer $ns company
    zone_transfer $ns computer
    zone_transfer $ns server
    zone_transfer $ns "-x 10"
    zone_transfer $ns "-x 192.168"
    for i in $(seq 16 31);
    do
        zone_transfer $ns "-x 172.$i"
    done
done
